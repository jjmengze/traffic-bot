// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: pkg/apis/tra/v1alpha1/tra.proto

package v1alpha1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// HelloRequest 请求结构
type SearchTrainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//    _csrf:d6cecf75-c5c9-4027-8b9e-36e8f1dc89a1
	Csrf string `protobuf:"bytes,1,opt,name=csrf,proto3" json:"csrf,omitempty"`
	//    startStation:7380-四腳亭
	StartStation string `protobuf:"bytes,2,opt,name=startStation,proto3" json:"startStation,omitempty"`
	//    endStation:1000-臺北
	EndStation string `protobuf:"bytes,3,opt,name=endStation,proto3" json:"endStation,omitempty"`
	//    transfer:ONE
	Transfer string `protobuf:"bytes,4,opt,name=transfer,proto3" json:"transfer,omitempty"`
	//    rideDate:2020/04/23
	RideDate string `protobuf:"bytes,5,opt,name=rideDate,proto3" json:"rideDate,omitempty"`
	//    startOrEndTime:true
	StartOrEndTime string `protobuf:"bytes,6,opt,name=startOrEndTime,proto3" json:"startOrEndTime,omitempty"`
	//    startTime:00:00
	StartTime string `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//    endTime:23:59
	EndTime string `protobuf:"bytes,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	//     trainTypeList:ALL
	TrainTypeList string `protobuf:"bytes,9,opt,name=trainTypeList,proto3" json:"trainTypeList,omitempty"`
	//    query:查詢
	Query string `protobuf:"bytes,10,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchTrainRequest) Reset() {
	*x = SearchTrainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTrainRequest) ProtoMessage() {}

func (x *SearchTrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTrainRequest.ProtoReflect.Descriptor instead.
func (*SearchTrainRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_tra_v1alpha1_tra_proto_rawDescGZIP(), []int{0}
}

func (x *SearchTrainRequest) GetCsrf() string {
	if x != nil {
		return x.Csrf
	}
	return ""
}

func (x *SearchTrainRequest) GetStartStation() string {
	if x != nil {
		return x.StartStation
	}
	return ""
}

func (x *SearchTrainRequest) GetEndStation() string {
	if x != nil {
		return x.EndStation
	}
	return ""
}

func (x *SearchTrainRequest) GetTransfer() string {
	if x != nil {
		return x.Transfer
	}
	return ""
}

func (x *SearchTrainRequest) GetRideDate() string {
	if x != nil {
		return x.RideDate
	}
	return ""
}

func (x *SearchTrainRequest) GetStartOrEndTime() string {
	if x != nil {
		return x.StartOrEndTime
	}
	return ""
}

func (x *SearchTrainRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchTrainRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SearchTrainRequest) GetTrainTypeList() string {
	if x != nil {
		return x.TrainTypeList
	}
	return ""
}

func (x *SearchTrainRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// HelloResponse 响应结构
type SearchTrainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []*Result `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *SearchTrainResponse) Reset() {
	*x = SearchTrainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTrainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTrainResponse) ProtoMessage() {}

func (x *SearchTrainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTrainResponse.ProtoReflect.Descriptor instead.
func (*SearchTrainResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_tra_v1alpha1_tra_proto_rawDescGZIP(), []int{1}
}

func (x *SearchTrainResponse) GetMessage() []*Result {
	if x != nil {
		return x.Message
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Number    string `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	StartTime string `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Spend     string `protobuf:"bytes,5,opt,name=spend,proto3" json:"spend,omitempty"`
	Ticket    string `protobuf:"bytes,6,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_pkg_apis_tra_v1alpha1_tra_proto_rawDescGZIP(), []int{2}
}

func (x *Result) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Result) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Result) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Result) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Result) GetSpend() string {
	if x != nil {
		return x.Spend
	}
	return ""
}

func (x *Result) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

var File_pkg_apis_tra_v1alpha1_tra_proto protoreflect.FileDescriptor

var file_pkg_apis_tra_v1alpha1_tra_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x21, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x22, 0xc0, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x73, 0x72, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x73, 0x72, 0x66, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x69, 0x64, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x69, 0x64, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4f, 0x72, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x72, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5a, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x32, 0x88,
	0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x7e, 0x0a, 0x0b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x35, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_apis_tra_v1alpha1_tra_proto_rawDescOnce sync.Once
	file_pkg_apis_tra_v1alpha1_tra_proto_rawDescData = file_pkg_apis_tra_v1alpha1_tra_proto_rawDesc
)

func file_pkg_apis_tra_v1alpha1_tra_proto_rawDescGZIP() []byte {
	file_pkg_apis_tra_v1alpha1_tra_proto_rawDescOnce.Do(func() {
		file_pkg_apis_tra_v1alpha1_tra_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_apis_tra_v1alpha1_tra_proto_rawDescData)
	})
	return file_pkg_apis_tra_v1alpha1_tra_proto_rawDescData
}

var file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_apis_tra_v1alpha1_tra_proto_goTypes = []interface{}{
	(*SearchTrainRequest)(nil),  // 0: traffic_bot.pkg.apis.tra.v1alpha1.SearchTrainRequest
	(*SearchTrainResponse)(nil), // 1: traffic_bot.pkg.apis.tra.v1alpha1.SearchTrainResponse
	(*Result)(nil),              // 2: traffic_bot.pkg.apis.tra.v1alpha1.Result
}
var file_pkg_apis_tra_v1alpha1_tra_proto_depIdxs = []int32{
	2, // 0: traffic_bot.pkg.apis.tra.v1alpha1.SearchTrainResponse.message:type_name -> traffic_bot.pkg.apis.tra.v1alpha1.Result
	0, // 1: traffic_bot.pkg.apis.tra.v1alpha1.Search.SearchTrain:input_type -> traffic_bot.pkg.apis.tra.v1alpha1.SearchTrainRequest
	1, // 2: traffic_bot.pkg.apis.tra.v1alpha1.Search.SearchTrain:output_type -> traffic_bot.pkg.apis.tra.v1alpha1.SearchTrainResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_apis_tra_v1alpha1_tra_proto_init() }
func file_pkg_apis_tra_v1alpha1_tra_proto_init() {
	if File_pkg_apis_tra_v1alpha1_tra_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTrainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTrainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_apis_tra_v1alpha1_tra_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_apis_tra_v1alpha1_tra_proto_goTypes,
		DependencyIndexes: file_pkg_apis_tra_v1alpha1_tra_proto_depIdxs,
		MessageInfos:      file_pkg_apis_tra_v1alpha1_tra_proto_msgTypes,
	}.Build()
	File_pkg_apis_tra_v1alpha1_tra_proto = out.File
	file_pkg_apis_tra_v1alpha1_tra_proto_rawDesc = nil
	file_pkg_apis_tra_v1alpha1_tra_proto_goTypes = nil
	file_pkg_apis_tra_v1alpha1_tra_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SearchClient is the client API for Search service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchClient interface {
	SearchTrain(ctx context.Context, in *SearchTrainRequest, opts ...grpc.CallOption) (*SearchTrainResponse, error)
}

type searchClient struct {
	cc grpc.ClientConnInterface
}

func NewSearchClient(cc grpc.ClientConnInterface) SearchClient {
	return &searchClient{cc}
}

func (c *searchClient) SearchTrain(ctx context.Context, in *SearchTrainRequest, opts ...grpc.CallOption) (*SearchTrainResponse, error) {
	out := new(SearchTrainResponse)
	err := c.cc.Invoke(ctx, "/traffic_bot.pkg.apis.tra.v1alpha1.Search/SearchTrain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServer is the server API for Search service.
type SearchServer interface {
	SearchTrain(context.Context, *SearchTrainRequest) (*SearchTrainResponse, error)
}

// UnimplementedSearchServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServer struct {
}

func (*UnimplementedSearchServer) SearchTrain(context.Context, *SearchTrainRequest) (*SearchTrainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchTrain not implemented")
}

func RegisterSearchServer(s *grpc.Server, srv SearchServer) {
	s.RegisterService(&_Search_serviceDesc, srv)
}

func _Search_SearchTrain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchTrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServer).SearchTrain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/traffic_bot.pkg.apis.tra.v1alpha1.Search/SearchTrain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServer).SearchTrain(ctx, req.(*SearchTrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Search_serviceDesc = grpc.ServiceDesc{
	ServiceName: "traffic_bot.pkg.apis.tra.v1alpha1.Search",
	HandlerType: (*SearchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchTrain",
			Handler:    _Search_SearchTrain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/apis/tra/v1alpha1/tra.proto",
}
